model User {
  id String @id @default(uuid()) @db.Uuid

  email    String        @unique
  password String
  role     EnumUserRoles @default(REGULAR)

  isVerified   Boolean  @default(false) @map("is_verified")
  isTFAEnabled Boolean? @default(false) @map("is_tfa_enabled")

  notifications        Notification[]
  notificationSettings NotificationSettings?

  settings UserSettings?
  cart     Cart?
  token    Token[]

  username    String  @unique
  telegramId  String? @unique @map("telegram_id")
  phoneNumber String? @unique @map("phone_number")

  avatarPath String?      @map("avatar_path")
  gender     EnumGenders?
  birthdate  DateTime?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model UserSettings {
  id String @id @default(uuid()) @db.Uuid

  defaultLanguage EnumLanguages? @map("default_language")
  defaultTheme    EnumThemes?    @map("default_theme")
  useFullLogout   Boolean?       @default(false) @map("use_full_logout")

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique @map("user_id") @db.Uuid

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("user_settings")
}
